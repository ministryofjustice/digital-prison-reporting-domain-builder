#!/bin/bash

# Script that builds the backend jar and then runs it.
#
# If the postgres container is not up the docker/start-postgres script will be
# run in order to start it and if successful, the backend will be built and
# executed.
#
# This is intended to support local development and testing only.

set -e

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
jar_path="$script_dir/../build/libs/domain-builder-backend-api-*-all.jar"

source "$script_dir/../bin/lib/script-helpers"

# Configure api key for local development. This *must* be the same as that set
# up for the domain-builder otherwise all requests will fail with a HTTP 401.
# See bin/domain-builder
export DOMAIN_API_KEY="local-development-key"

function check_postgres_running {
  if docker info &> /dev/null && docker ps | grep -E "postgres.*Up.*5432" &> /dev/null
  then
    show_ok "Postgres container running on local port 5432"
  else
    show_wait "Postgres container is not running. Starting..."
    if $script_dir/../docker/start-postgres &> /dev/null
    then
      show_ok "Postgres docker container is up"
    else
      show_fail_and_exit "Failed to start postgres docker container" "Run ./docker/start-postgres and review output"
    fi
  fi
}

function build_backend {
  show_wait "Running build..."
  cd $script_dir/..
  if ./gradlew :backend:shadowJar &> /dev/null
  then
    show_ok "Backend jar built successfully"
  else
    show_fail_and_exit "Failed to build backend jar" "Run ./gradlew :backend:shadowJar and review output"
  fi
}

function check_jar_exists {
  if [ -e $jar_path ]
  then
    show_ok "Backend api jar exists in expected location"
  else
    show_fail_and_exit "Backend api jar does not exist" "Review build output and check backend/build/libs contains the correctly named jar file"
  fi
}

echo
show_heading "Launching backend api"
echo
check_java_version
check_postgres_running
build_backend
check_jar_exists
echo
show_heading "Starting backend API on http://localhost:8080 with local dev api key" 
echo
echo "[Press CTRL-C to exit]"
echo

run_with_local_config "java -jar $jar_path"
